#summary How to build the module from source
#labels Phase-Implementation,Phase-Deploy,Featured

= Build Steps =

== Precompiled Packages ==
If you want to try pyv8 ASAP, we suggest you use precompiled package for your platform.

Please downloads the precompiled [http://code.google.com/p/pyv8/downloads/list packages] for Windows and Linux/Debian.

tocer also provide packages [http://aur.archlinux.org/packages.php?ID=36092 (1)] [http://aur.archlinux.org/packages.php?ID=36076 (2)] for [http://www.archlinux.org/ ArchLinux]

== Build the module ==
Just run the setup.py with *install* or *build* command

{{{
setup.py install
}}}

== Build the distribution ==
Just run the setup.py with *bdist* or *bdist_wininst* command

{{{
setup.py bdist_wininst
}}}

= Third Party Library =

== Python ==
As the runtime and libraries, download and install [http://www.python.org/download/ Python 2.5] or later first.

set environment variable PYTHON_HOME to the python root folder

== Boost ==
PyV8 use [http://www.boost.org/doc/libs/release/libs/python/doc/ boost::python] for interoperability, so, [http://www.boost.org/users/download/ download] the latest boost version and [http://www.boost.org/doc/libs/release/more/getting_started/ build] the library.

set environment variable BOOST_HOME to the boost root folder

== Google V8 ==
Follow the [http://code.google.com/apis/v8/build.html document] to download and build v8 engine as static library

set environment variable V8_HOME to the v8 root folder

If you want to build v8 with GCC 4.x at x64 platform, you should compile v8 with PIC (Position-Independent Code) mode, and set the arch to x64 for scons.
{{{
export CCFLAGS=-fPIC
scons arch=x64
}}}

=== v8 3.0 on Visual Studio ===

The Visual Studio solution of v8 3.0 or later has disabled the runtime typeinfo and C++ exception by default. It may save some bits of memory, but will broke the boost::python library and pyv8. So, we must enable it before build pyv8. You could apply the [http://code.google.com/p/pyv8/downloads/detail?name=common.patch&can=2&q= patch] or modify it by manual.
{{{
Index: common.vsprops
===================================================================
--- common.vsprops	(Version 5952)
+++ common.vsprops	(Working Copy)
@@ -8,12 +8,12 @@
 	<Tool
 		Name="VCCLCompilerTool"
 		AdditionalIncludeDirectories="$(ProjectDir)\..\..\src;$(IntDir)\DerivedSources"
-		PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_HAS_EXCEPTIONS=0;ENABLE_VMSTATE_TRACKING;ENABLE_LOGGING_AND_PROFILING;ENABLE_DEBUGGER_SUPPORT"
+		PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_HAS_EXCEPTIONS=1;ENABLE_VMSTATE_TRACKING;ENABLE_LOGGING_AND_PROFILING;ENABLE_DEBUGGER_SUPPORT"
 		MinimalRebuild="false"
-		ExceptionHandling="0"
-		RuntimeTypeInfo="false"
+		ExceptionHandling="1"
+		RuntimeTypeInfo="yes"
 		WarningLevel="3"
-		WarnAsError="true"
+		WarnAsError="false"
 		Detect64BitPortabilityProblems="false"
 		DebugInformationFormat="3"
 		DisableSpecificWarnings="4355;4800"

}}}

== Debug Mode ==
You could build Google v8 and PyV8 with debug mode, for more detail debug information.

  * Build v8 with debug mode
{{{
scons mode=debug # x86
scons mode=debug arch=x64 #64
}}}
  * Set or export DEBUG=1
{{{
set DEBUG=1 # Windows
export DEBUG=1 # Unix
}}}
  * Build pyv8 with setup.py
{{{
python setup.py build
}}}

_contribute by  gaussgss_

== FAQ == 
1. Fail to load _PyV8.so with AttributeError exception

  If you got the exception "AttributeError: 'Boost.Python.StaticProperty' object attribute '__doc__' is read-only", please check your Python version. The Python 2.6.4 introduce [http://www.mail-archive.com/python-dev@python.org/msg42741.html a known issue] which will break boost 1.40 or earlier version. Please use Python 2.5.x/2.6.3, or upgrade your boost to 1.41 or later. 